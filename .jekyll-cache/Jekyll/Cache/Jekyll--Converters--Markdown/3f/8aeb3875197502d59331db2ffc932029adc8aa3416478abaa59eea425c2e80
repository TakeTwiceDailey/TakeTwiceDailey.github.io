I"7<h2 id="the-default-html-and-markdown-syntax">The default HTML and Markdown syntax</h2>
<hr />

<p>Compared to other computer languages I know, <abbr title="HyperText Markup Langage">HTML</abbr> is incredibly bloated. For example, the tags used in HTML, say the body tag <code class="highlighter-rouge">&lt;body&gt;</code> needs an ending tag <code class="highlighter-rouge">&lt;/body&gt;</code> once you are done filling out the content, and all of the style changes or other specificities are crammed into the parent tag. This has the effect of making HTML documents look ridiculously messy.</p>

<p>This is why web development seems to have split into three separate entities, HTML/Markdown, <abbr title="Cascading Style Sheets">CSS</abbr>, and JavaScript. HTML serves as the main language with which your browser translates the content to display on your screen. CSS serves as a separate file that contains all information regarding the styling and formatting of content, so that the programmer does not need to cram all of the style code into HTML tags. Javascript is there to take care of any more complicated functionality you may require to code by hand. Some genius (John Gruber) invented Markdown as a more user-friendly alternative to the main content specifications in HTML, translating from a more intuitive layout to raw HTML. Here is how you use some of the basic functions:</p>

<table>
  <thead>
    <tr>
      <th>Formatting Type</th>
      <th>Markdown Syntax</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>paragraph text</td>
      <td><code class="highlighter-rouge">paragraph text</code></td>
    </tr>
    <tr>
      <td><em>italic</em></td>
      <td><code class="highlighter-rouge">*italic*</code></td>
    </tr>
    <tr>
      <td><strong>bold</strong></td>
      <td><code class="highlighter-rouge">**bold**</code></td>
    </tr>
    <tr>
      <td><strong><em>both</em></strong></td>
      <td><code class="highlighter-rouge">***both***</code></td>
    </tr>
    <tr>
      <td><del>strikethrough</del></td>
      <td><code class="highlighter-rouge">~~strikethrough~~</code></td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">inline codeblock</code></td>
      <td><code class="highlighter-rouge">`inline codeblock`</code></td>
    </tr>
  </tbody>
</table>

<p>Markdown was never meant to be an exhaustive list of syntax re-mapping for HTML, so there are many things you might find missing. Luckily, raw HTML syntax is still valid inside Markdown documents. This is great for practically any specific text manipulation you might need, just not so great for your eyes. Here are some things I use that are not in Markdown by default:</p>

<table>
  <thead>
    <tr>
      <th>Formatting Type</th>
      <th>HTML Syntax</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>some<sup>superscript</sup></td>
      <td><code class="highlighter-rouge">some&lt;sup&gt;superscript&lt;/sup&gt;</code></td>
    </tr>
    <tr>
      <td>some<sub>subscript</sub></td>
      <td><code class="highlighter-rouge">some&lt;sub&gt;subscript&lt;/sub&gt;</code></td>
    </tr>
    <tr>
      <td><abbr title="HyperText Markup Langage">HTML</abbr></td>
      <td><code class="highlighter-rouge">&lt;abbr title="HyperText Markup Langage"&gt;HTML&lt;/abbr&gt;</code></td>
    </tr>
    <tr>
      <td><ins>insert<ins></ins></ins></td>
      <td><code class="highlighter-rouge">&lt;ins&gt;insert&lt;/ins&gt;</code></td>
    </tr>
  </tbody>
</table>

<h2 id="other-markdown-syntax">Other Markdown syntax</h2>
<hr />

<p>If you need to quote a large amount of text, you can do this in blockquotes:</p>

<blockquote>
  <p>This is a blockquote. The default HTML syntax for this is messy:
<code class="highlighter-rouge">&lt;blockquote&gt;text&lt;/blockquote&gt;</code>, but in Markdown this same thing is achieved with:</p>
</blockquote>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; greater-than symbols in front
&gt; of your text elements
</code></pre></div></div>
<p>Making the Markdown document look much cleaner. Keep in mind that all of the formatting and styling of the specific blockquotes, tables, etc., shown here are done with CSS outside of the Markdown file. How did I do that large code block you ask?</p>

<h2 id="syntax-highlighting">Syntax Highlighting</h2>
<hr />

<p>Sometimes you need to show literal code in your documents. Luckily this works great, for a huge library of languages, natively. Just specify the language you want in three backticks, like this:</p>

<figure class="highlight"><pre><code class="language-markdown" data-lang="markdown"><span class="p">```</span><span class="nl"> mathematica
</span><span class="w">
</span><span class="nv">a</span><span class="o">=</span><span class="m">4</span><span class="o">;</span><span class="w">
</span><span class="nv">b</span><span class="o">=</span><span class="m">3</span><span class="o">;</span><span class="w">
</span><span class="nb">Times</span><span class="p">[</span><span class="m">3</span><span class="o">,</span><span class="m">4</span><span class="p">]</span><span class="w">

</span><span class="nv">function</span><span class="p">[</span><span class="nv">x</span><span class="o">_,</span><span class="nv">y</span><span class="o">_</span><span class="p">]</span><span class="o">:=</span><span class="w"> </span><span class="nv">x</span><span class="o">^</span><span class="m">2</span><span class="o">+</span><span class="nv">y</span><span class="o">^</span><span class="m">2</span><span class="w">

</span><span class="p">```</span></code></pre></figure>

<p>The above markdown code yields:</p>

<div class="language-mathematica highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">
</span><span class="nv">a</span><span class="o">=</span><span class="m">4</span><span class="o">;</span><span class="w">
</span><span class="nv">b</span><span class="o">=</span><span class="m">3</span><span class="o">;</span><span class="w">
</span><span class="nb">Times</span><span class="p">[</span><span class="m">3</span><span class="o">,</span><span class="m">4</span><span class="p">]</span><span class="w">

</span><span class="nv">function</span><span class="p">[</span><span class="nv">x</span><span class="o">_,</span><span class="nv">y</span><span class="o">_</span><span class="p">]</span><span class="o">:=</span><span class="w"> </span><span class="nv">x</span><span class="o">^</span><span class="m">2</span><span class="o">+</span><span class="nv">y</span><span class="o">^</span><span class="m">2</span><span class="w">

</span></code></pre></div></div>

<h2 id="lists">Lists</h2>
<hr />

<p>You can make ordered and unordered lists using the Markdown syntax. You can use</p>

<ul>
  <li>Asterisks</li>
  <li>Dashes</li>
  <li>or Pluses</li>
</ul>

<p>to make your list elements just like</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>* Asterisks
- Dashes
+ or Pluses
</code></pre></div></div>

<p>and no matter what you use, Markdown will format it the same way. Ordered lists are made with numbers following a dot, but they don’t have to be in order in Markdown. A random order like this</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3. randomly
1. ordered
2. list
</code></pre></div></div>
<p>will still format ordered in your final document:</p>

<ol>
  <li>randomly</li>
  <li>ordered</li>
  <li>list</li>
</ol>

<h2 id="tables">Tables</h2>
<hr />

<p>You can build tables in the Markdown document just like they might look in the document. The only important features are that there are at least three dashes in each column, and the positions of the colons define left, center, and right aligned table elements. Here’s an example:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>| The Table | Contents | Go Here  |
|:----------|:--------:|---------:|
|left       |  center  |     right|
</code></pre></div></div>

<p>Yields the following:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">The Table</th>
      <th style="text-align: center">Contents</th>
      <th style="text-align: right">Go Here</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">left</td>
      <td style="text-align: center">center</td>
      <td style="text-align: right">right</td>
    </tr>
  </tbody>
</table>

<p>Hopefully that helped a little if you are currently new to this like I was.</p>

<h2 id="kramdown">kramdown</h2>
<hr />

<p>Jekyll, the engine I use to compile this website, uses by default an extension of Markdown called kramdown. It adds a bunch of other functions to the original Markdown syntax. One of these nice additions is the ability to add classes/ids to paragraph elements. For example, I defined several custom message classes using CSS, and to use them, I can specify that they are meant to be those classes by adding some kramdown code, like so:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>This warning block can be used to bring attention to a very
important item that is crucially not missed by the reader.
{: class="message warning"}
</code></pre></div></div>

<p>These classes can be used to bring attention to in-line text that I don’t want the reader to miss (inspired by those you can find on the Jekyll website) and they come in four different forms.</p>

<p class="message warning">This warning block can be used to bring attention to a very important item that is crucially not missed by the reader.</p>

<p class="message note">This note block can act as a sort of footnote that I want the reader to read now rather than at the bottom of the page.</p>

<p class="message tip">This tip block can be used to show little pieces of information that may make following a tutorial easier if the reader is not as familiar with the framework.</p>

<p class="message example">This example block can be used to showcase short examples to make a concept more clear.</p>

<h2 id="mathjax">MathJax</h2>
<hr />

<p>MathJax is the display engine you use if you want beautiful math formatting online. According to them:</p>

<blockquote>
  <p>(MathJax is) a JavaScript display engine for mathematics that works in all browsers.
No more setup for readers. It just works.</p>
</blockquote>

<p>It works with kramdown just fine, and uses the well-known <script type="math/tex">\mathrm{\LaTeX}</script> math-typesetting syntax.</p>

<p>To use it, as is recommended on their website, you include the following in the head of your HTML:</p>

<div style="font-size: 95%;" class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script
</span><span class="na">src=</span><span class="s">"https://polyfill.io/v3/polyfill.min.js?features=es6"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/script&gt;</span>
<span class="nt">&lt;script </span><span class="na">id=</span><span class="s">"MathJax-script"</span> <span class="na">async</span>
<span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<p>This will ensure that your website will always use the latest version of MathJax.</p>

<p>In this blog, I decided to use a constant version, so that I don’t have to deal with future versions changing the format as I like it, so I used the following instead:</p>

<div style="font-size: 93%;" class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span> <span class="na">async</span>
  <span class="na">src=</span><span class="s">"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-AMS-MML_HTMLorMML"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/script&gt;</span>

<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span> <span class="na">id=</span><span class="s">"MathJax-script"</span> <span class="na">async</span>
  <span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<p>To use MathJax, you wrap “display mode math” <script type="math/tex">\mathrm{\LaTeX}</script> code in double dollars (<code class="highlighter-rouge">$$...$$</code>), and inline math in single dollars (<code class="highlighter-rouge">$...$</code>). Here is a quick example of how you might write an article involving spherical harmonics in kramdown:</p>

<div style="font-size: 95%;" class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The spherical harmonics are defined based on Laplace's
equation

$$
\nabla^2 f(r,\theta,\phi)=0\,,
$$

where the Laplacian operator $\nabla^2$ in spherical
coordinates is

$$
\nabla^2 = \frac{1}{r^2}\frac{\partial}{\partial r}\left(r^2\frac{\partial}{\partial r}\right)+\frac{1}{r^2\sin(\theta)}\frac{\partial}{\partial \theta}\left(\sin(\theta)\frac{\partial}{\partial \theta}\right)+\frac{1}{r^2\sin^2(\theta)}\frac{\partial^2}{\partial\phi^2}\,.
$$
</code></pre></div></div>

<p>Which fully rendered yields:</p>

<hr />

<p>The spherical harmonics are defined based on Laplace’s equation</p>

<script type="math/tex; mode=display">\nabla^2 f(r,\theta,\phi)=0\,,</script>

<p>where the Laplacian operator $\nabla^2$ in spherical coordinates is</p>

<script type="math/tex; mode=display">\nabla^2 = \frac{1}{r^2}\frac{\partial}{\partial r}\left(r^2\frac{\partial}{\partial r}\right)+\frac{1}{r^2\sin(\theta)}\frac{\partial}{\partial \theta}\left(\sin(\theta)\frac{\partial}{\partial \theta}\right)+\frac{1}{r^2\sin^2(\theta)}\frac{\partial^2}{\partial\phi^2}\,.</script>

<hr />

<p>Which is just as good as $\mathrm{\LaTeX}$ for my puposes anyway.</p>
:ET